package com.efreight.afbase.dao;

import com.efreight.afbase.entity.*;

import java.util.HashMap;
import java.util.List;

import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;

import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

/**
 * <p>
 * AF 延伸服务 成本 Mapper 接口
 * </p>
 *
 * @author qipm
 * @since 2019-10-12
 */
public interface AfCostMapper extends BaseMapper<AfCost> {
    @Select("select * from af_cost \n"
            + " where order_uuid=#{order_uuid} and org_id=#{org_id}  and payment_id  IS NOT NULL\n")
    List<AfCost> queryAfCostList(@Param("org_id") Integer org_id, @Param("order_uuid") String order_uuid);


    @Select({"<script>",
            "select",
            " max(A.order_code) as order_code,max(A.awb_number) as awb_number,max(A.customer_number) as customerNumber,",
            "max(A.hawb_number) as hawb_number,if(max(t.business_scope)='AE',max(A.expect_departure),max(A.expect_arrival)) as flight_date,",
            "max(C.coop_type) as customer_type,",
            "max(t.customer_name) as customer_name, max(t.service_name) as service_name, max(t.business_scope) as business_scope,",
            "t.cost_currency,sum(t.cost_amount) as cost_amount,sum(t.cost_functional_amount) as cost_functional_amount,",
            "sum(t.cost_amount_payment) as cost_amount_payment,min(t.cost_exchange_rate) as cost_exchange_rate,",
            "sum(t.cost_amount_writeoff) as cost_amount_writeoff,min(t.order_id) as order_id,min(t.order_uuid) as order_uuid ",
            " from af_cost t ",
            " left join  af_order A ON A.order_id = t.order_id ",
            " left join  prm_coop C ON C.coop_id = t.customer_id ",

            " WHERE 1=1 and t.business_scope = #{bean.businessScope} and t.org_id = #{bean.orgId} ",
            "<when test='bean.awbNumber!=null and bean.awbNumber!=\"\"'>",
            " and (A.awb_number like  \"%\"#{bean.awbNumber}\"%\" or A.hawb_number like \"%\"#{bean.hawbNumber}\"%\")",
            "</when>",
            "<when test='bean.orderCode!=null and bean.orderCode!=\"\"'>",
            " and (A.order_code  like  \"%\"#{bean.orderCode}\"%\" or  A.awb_number like  \"%\"#{bean.orderCode}\"%\" or A.hawb_number like \"%\"#{bean.orderCode}\"%\")",
            "</when>",
            "<when test='bean.customerNumber!=null and bean.customerNumber!=\"\"'>",
            " and (A.customer_number like  \"%\"#{bean.customerNumber}\"%\")",
            "</when>",
            "<when test='bean.flightDateStart!=null and bean.businessScope==\"AE\"'>",
            " and  A.expect_departure <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateStart!=null  and bean.businessScope==\"AI\"'>",
            " and  A.expect_arrival <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null  and bean.businessScope==\"AE\"'>",
            " and  A.expect_departure <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null and bean.businessScope==\"AI\"'>",
            " and  A.expect_arrival <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.customerName!=null and bean.customerName!=\"\"'>",
            " and t.customer_name like  \"%\"#{bean.customerName}\"%\"",
            "</when>",
            "<when test='bean.serviceId!=null'>",
            " and t.service_id = #{bean.serviceId}",
            "</when>",
            "<when test='bean.customerType!=null and bean.customerType!=\"\"'>",
            " and C.coop_type = #{bean.customerType}",
            "</when>",
            " group by t.order_id,t.customer_id,t.cost_currency",
            "</script>"})
    IPage<AfCost> queryAfCostPageAf(Page page, @Param("bean") AfCost afCost);

    @Select({"<script>",
            "select",
            " max(A.order_code) as order_code,max(A.awb_number) as awb_number,max(A.customer_number) as customerNumber,",
            "max(A.hawb_number) as hawb_number,if(max(t.business_scope)='AE',max(A.expect_departure),max(A.expect_arrival)) as flight_date,",
            "max(C.coop_type) as customer_type,",
            "max(t.customer_name) as customer_name, max(t.service_name) as service_name, max(t.business_scope) as business_scope,",
            "t.cost_currency,sum(t.cost_amount) as cost_amount,sum(t.cost_functional_amount) as cost_functional_amount,",
            "sum(t.cost_amount_payment) as cost_amount_payment,min(t.cost_exchange_rate) as cost_exchange_rate,",
            "sum(t.cost_amount_writeoff) as cost_amount_writeoff,min(t.order_id) as order_id,min(t.order_uuid) as order_uuid ",
            " from af_cost t ",
            " left join  af_order A ON A.order_id = t.order_id ",
            " left join  prm_coop C ON C.coop_id = t.customer_id ",

            " WHERE 1=1 and t.business_scope = #{bean.businessScope} and t.org_id = #{bean.orgId} ",
            "<when test='bean.awbNumber!=null and bean.awbNumber!=\"\"'>",
            " and (A.awb_number like  \"%\"#{bean.awbNumber}\"%\" or A.hawb_number like \"%\"#{bean.hawbNumber}\"%\")",
            "</when>",
            "<when test='bean.orderCode!=null and bean.orderCode!=\"\"'>",
            " and (A.order_code  like  \"%\"#{bean.orderCode}\"%\" or  A.awb_number like  \"%\"#{bean.orderCode}\"%\" or A.hawb_number like \"%\"#{bean.orderCode}\"%\")",
            "</when>",
            "<when test='bean.customerNumber!=null and bean.customerNumber!=\"\"'>",
            " and (A.customer_number like  \"%\"#{bean.customerNumber}\"%\")",
            "</when>",
            "<when test='bean.flightDateStart!=null and bean.businessScope==\"AE\"'>",
            " and  A.expect_departure <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateStart!=null  and bean.businessScope==\"AI\"'>",
            " and  A.expect_arrival <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null  and bean.businessScope==\"AE\"'>",
            " and  A.expect_departure <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null and bean.businessScope==\"AI\"'>",
            " and  A.expect_arrival <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.customerName!=null and bean.customerName!=\"\"'>",
            " and t.customer_name like  \"%\"#{bean.customerName}\"%\"",
            "</when>",
            "<when test='bean.serviceId!=null'>",
            " and t.service_id = #{bean.serviceId}",
            "</when>",
            "<when test='bean.customerType!=null and bean.customerType!=\"\"'>",
            " and C.coop_type = #{bean.customerType}",
            "</when>",
            " group by t.order_id,t.customer_id,t.cost_currency",
            "</script>"})
    List<AfCost> queryAfCostPageAfExcel(@Param("bean") AfCost afCost);

    @Select({"<script>",
            "select",
            " max(A.order_code) as order_code,max(A.mbl_number) as awb_number,max(A.customer_number) as customerNumber,",
            "max(A.hbl_number) as hawb_number,if(max(t.business_scope)='SE',max(A.expect_departure),max(A.expect_arrival)) as flight_date,",
            "max(C.coop_type) as customer_type,",
            "max(t.customer_name) as customer_name, max(t.service_name) as service_name, max(t.business_scope) as business_scope,",
            "t.cost_currency,sum(t.cost_amount) as cost_amount,sum(t.cost_functional_amount) as cost_functional_amount,",
            "sum(t.cost_amount_payment) as cost_amount_payment,min(t.cost_exchange_rate) as cost_exchange_rate,",
            "sum(t.cost_amount_writeoff) as cost_amount_writeoff,min(t.order_id) as order_id,min(t.order_uuid) as order_uuid ",
            " from sc_cost t ",
            " left join  sc_order A ON A.order_id = t.order_id ",
            " left join  prm_coop C ON C.coop_id = t.customer_id ",

            " WHERE 1=1 and t.business_scope = #{bean.businessScope} and t.org_id = #{bean.orgId} ",
            "<when test='bean.awbNumber!=null and bean.awbNumber!=\"\"'>",
            " and (A.mbl_number like  \"%\"#{bean.awbNumber}\"%\" or A.hbl_number like \"%\"#{bean.hawbNumber}\"%\")",
            "</when>",
            "<when test='bean.orderCode!=null and bean.orderCode!=\"\"'>",
            " and (A.order_code  like  \"%\"#{bean.orderCode}\"%\" or  A.mbl_number like  \"%\"#{bean.orderCode}\"%\" or A.hbl_number like \"%\"#{bean.orderCode}\"%\")",
            "</when>",
            "<when test='bean.customerNumber!=null and bean.customerNumber!=\"\"'>",
            " and (A.customer_number like  \"%\"#{bean.customerNumber}\"%\")",
            "</when>",
            "<when test='bean.flightDateStart!=null and bean.businessScope==\"SE\"'>",
            " and  A.expect_departure <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateStart!=null  and bean.businessScope==\"SI\"'>",
            " and  A.expect_arrival <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null  and bean.businessScope==\"SE\"'>",
            " and  A.expect_departure <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null and bean.businessScope==\"SI\"'>",
            " and  A.expect_arrival <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.customerName!=null and bean.customerName!=\"\"'>",
            " and t.customer_name like  \"%\"#{bean.customerName}\"%\"",
            "</when>",
            "<when test='bean.serviceId!=null'>",
            " and t.service_id = #{bean.serviceId}",
            "</when>",
            "<when test='bean.customerType!=null and bean.customerType!=\"\"'>",
            " and C.coop_type = #{bean.customerType}",
            "</when>",
            " group by t.order_id,t.customer_id,t.cost_currency",
            "</script>"})
    IPage<ScCost> queryScCostPageSc(Page page, @Param("bean") ScCost scCost);


    @Select({"<script>",
            "select",
            " max(A.order_code) as order_code,max(A.rwb_number) as awb_number,max(A.customer_number) as customerNumber,",
            "if(max(t.business_scope)='TE',max(A.expect_departure),max(A.expect_arrival)) as flight_date,",
            "max(C.coop_type) as customer_type,",
            "max(t.customer_name) as customer_name, max(t.service_name) as service_name, max(t.business_scope) as business_scope,",
            "t.cost_currency,sum(t.cost_amount) as cost_amount,sum(t.cost_functional_amount) as cost_functional_amount,",
            "sum(t.cost_amount_payment) as cost_amount_payment,min(t.cost_exchange_rate) as cost_exchange_rate,",
            "sum(t.cost_amount_writeoff) as cost_amount_writeoff,min(t.order_id) as order_id,min(t.order_uuid) as order_uuid ",
            " from tc_cost t ",
            " left join  tc_order A ON A.order_id = t.order_id ",
            " left join  prm_coop C ON C.coop_id = t.customer_id ",

            " WHERE 1=1 and t.business_scope = #{bean.businessScope} and t.org_id = #{bean.orgId} ",
            "<when test='bean.rwbNumber!=null and bean.rwbNumber!=\"\"'>",
            " and A.rwb_number like  \"%\"#{bean.rwbNumber}\"%\" ",
            "</when>",
            "<when test='bean.orderCode!=null and bean.orderCode!=\"\"'>",
            " and (A.order_code  like  \"%\"#{bean.orderCode}\"%\" or  A.rwb_number like  \"%\"#{bean.orderCode}\"%\")",
            "</when>",
            "<when test='bean.customerNumber!=null and bean.customerNumber!=\"\"'>",
            " and (A.customer_number like  \"%\"#{bean.customerNumber}\"%\")",
            "</when>",
            "<when test='bean.flightDateStart!=null and bean.businessScope==\"TE\"'>",
            " and  A.expect_departure <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateStart!=null  and bean.businessScope==\"TI\"'>",
            " and  A.expect_arrival <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null  and bean.businessScope==\"TE\"'>",
            " and  A.expect_departure <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null and bean.businessScope==\"TI\"'>",
            " and  A.expect_arrival <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.customerName!=null and bean.customerName!=\"\"'>",
            " and t.customer_name like  \"%\"#{bean.customerName}\"%\"",
            "</when>",
            "<when test='bean.serviceId!=null'>",
            " and t.service_id = #{bean.serviceId}",
            "</when>",
            "<when test='bean.customerType!=null and bean.customerType!=\"\"'>",
            " and C.coop_type = #{bean.customerType}",
            "</when>",
            " group by t.order_id,t.customer_id,t.cost_currency",
            "</script>"})
    IPage<TcCost> queryTcCostPageTC(Page page, @Param("bean") TcCost tcCost);


    @Select({"<script>",
            "select",
            " max(A.order_code) as order_code,max(A.customer_number) as awb_number,max(A.customer_number) as customerNumber,",
            "max(A.driving_time) as flight_date,",
            "max(C.coop_type) as customer_type,",
            "max(t.customer_name) as customer_name, max(t.service_name) as service_name, max(t.business_scope) as business_scope,",
            "t.cost_currency,sum(t.cost_amount) as cost_amount,sum(t.cost_functional_amount) as cost_functional_amount,",
            "sum(t.cost_amount_payment) as cost_amount_payment,min(t.cost_exchange_rate) as cost_exchange_rate,",
            "sum(t.cost_amount_writeoff) as cost_amount_writeoff,min(t.order_id) as order_id,min(t.order_uuid) as order_uuid ",
            " from lc_cost t ",
            " left join  lc_order A ON A.order_id = t.order_id ",
            " left join  prm_coop C ON C.coop_id = t.customer_id ",

            " WHERE 1=1 and t.business_scope = #{bean.businessScope} and t.org_id = #{bean.orgId} ",
            "<when test='bean.customerNumber!=null and bean.customerNumber!=\"\"'>",
            " and A.customer_number like  \"%\"#{bean.customerNumber}\"%\" ",
            "</when>",
            "<when test='bean.orderCode!=null and bean.orderCode!=\"\"'>",
            " and  A.order_code like  \"%\"#{bean.orderCode}\"%\"",
            "</when>",
            "<when test='bean.flightDateStart!=null'>",
            " and  A.driving_time <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null'>",
            " and  A.driving_time <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.customerName!=null and bean.customerName!=\"\"'>",
            " and t.customer_name like  \"%\"#{bean.customerName}\"%\"",
            "</when>",
            "<when test='bean.serviceId!=null'>",
            " and t.service_id = #{bean.serviceId}",
            "</when>",
            "<when test='bean.customerType!=null and bean.customerType!=\"\"'>",
            " and C.coop_type = #{bean.customerType}",
            "</when>",
            " group by t.order_id,t.customer_id,t.cost_currency",
            "</script>"})
    IPage<LcCost> queryTcCostPageLC(Page page, @Param("bean") LcCost lcCost);

    @Select({"<script>",
            "select",
            " max(A.order_code) as order_code,max(A.customer_number) as awb_number,max(A.customer_number) as customerNumber,",
            "max(A.business_date) as flight_date,",
            "max(C.coop_type) as customer_type,",
            "max(t.customer_name) as customer_name, max(t.service_name) as service_name, max(t.business_scope) as business_scope,",
            "t.cost_currency,sum(t.cost_amount) as cost_amount,sum(t.cost_functional_amount) as cost_functional_amount,",
            "sum(t.cost_amount_payment) as cost_amount_payment,min(t.cost_exchange_rate) as cost_exchange_rate,",
            "sum(t.cost_amount_writeoff) as cost_amount_writeoff,min(t.order_id) as order_id,min(t.order_uuid) as order_uuid ",
            " from io_cost t ",
            " left join  io_order A ON A.order_id = t.order_id ",
            " left join  prm_coop C ON C.coop_id = t.customer_id ",

            " WHERE 1=1 and t.business_scope = #{bean.businessScope} and t.org_id = #{bean.orgId} ",
            "<when test='bean.customerNumber!=null and bean.customerNumber!=\"\"'>",
            " and A.customer_number like  \"%\"#{bean.customerNumber}\"%\" ",
            "</when>",
            "<when test='bean.orderCode!=null and bean.orderCode!=\"\"'>",
            " and  A.order_code like  \"%\"#{bean.orderCode}\"%\"",
            "</when>",
            "<when test='bean.flightDateStart!=null'>",
            " and  A.business_date <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null'>",
            " and  A.business_date <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.customerName!=null and bean.customerName!=\"\"'>",
            " and t.customer_name like  \"%\"#{bean.customerName}\"%\"",
            "</when>",
            "<when test='bean.serviceId!=null'>",
            " and t.service_id = #{bean.serviceId}",
            "</when>",
            "<when test='bean.customerType!=null and bean.customerType!=\"\"'>",
            " and C.coop_type = #{bean.customerType}",
            "</when>",
            " group by t.order_id,t.customer_id,t.cost_currency",
            "</script>"})
    IPage<IoCost> queryIOCostPage(Page page, @Param("bean") IoCost ioCost);


    @Select({"<script>",
            "select",
            " max(A.order_code) as order_code,max(A.mbl_number) as awb_number,max(A.customer_number) as customerNumber,",
            "max(A.hbl_number) as hawb_number,if(max(t.business_scope)='SE',max(A.expect_departure),max(A.expect_arrival)) as flight_date,",
            "max(C.coop_type) as customer_type,",
            "max(t.customer_name) as customer_name, max(t.service_name) as service_name, max(t.business_scope) as business_scope,",
            "t.cost_currency,sum(t.cost_amount) as cost_amount,sum(t.cost_functional_amount) as cost_functional_amount,",
            "sum(t.cost_amount_payment) as cost_amount_payment,min(t.cost_exchange_rate) as cost_exchange_rate,",
            "sum(t.cost_amount_writeoff) as cost_amount_writeoff,min(t.order_id) as order_id,min(t.order_uuid) as order_uuid ",
            " from sc_cost t ",
            " left join  sc_order A ON A.order_id = t.order_id ",
            " left join  prm_coop C ON C.coop_id = t.customer_id ",

            " WHERE 1=1 and t.business_scope = #{bean.businessScope} and t.org_id = #{bean.orgId} ",
            "<when test='bean.awbNumber!=null and bean.awbNumber!=\"\"'>",
            " and (A.mbl_number like  \"%\"#{bean.awbNumber}\"%\" or A.hbl_number like \"%\"#{bean.hawbNumber}\"%\")",
            "</when>",
            "<when test='bean.orderCode!=null and bean.orderCode!=\"\"'>",
            " and (A.order_code  like  \"%\"#{bean.orderCode}\"%\" or  A.mbl_number like  \"%\"#{bean.orderCode}\"%\" or A.hbl_number like \"%\"#{bean.orderCode}\"%\")",
            "</when>",
            "<when test='bean.customerNumber!=null and bean.customerNumber!=\"\"'>",
            " and (A.customer_number like  \"%\"#{bean.customerNumber}\"%\")",
            "</when>",
            "<when test='bean.flightDateStart!=null and bean.businessScope==\"SE\"'>",
            " and  A.expect_departure <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateStart!=null  and bean.businessScope==\"SI\"'>",
            " and  A.expect_arrival <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null  and bean.businessScope==\"SE\"'>",
            " and  A.expect_departure <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null and bean.businessScope==\"SI\"'>",
            " and  A.expect_arrival <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.customerName!=null and bean.customerName!=\"\"'>",
            " and t.customer_name like  \"%\"#{bean.customerName}\"%\"",
            "</when>",
            "<when test='bean.serviceId!=null'>",
            " and t.service_id = #{bean.serviceId}",
            "</when>",
            "<when test='bean.customerType!=null and bean.customerType!=\"\"'>",
            " and C.coop_type = #{bean.customerType}",
            "</when>",
            " group by t.order_id,t.customer_id,t.cost_currency",
            "</script>"})
    List<ScCost> queryScCostPageScExcel(@Param("bean") ScCost scCost);

    @Select({"<script>",
            "select",
            " max(A.order_code) as order_code,max(A.rwb_number) as awb_number,max(A.customer_number) as customerNumber,",
            "if(max(t.business_scope)='TE',max(A.expect_departure),max(A.expect_arrival)) as flight_date,",
            "max(C.coop_type) as customer_type,",
            "max(t.customer_name) as customer_name, max(t.service_name) as service_name, max(t.business_scope) as business_scope,",
            "t.cost_currency,sum(t.cost_amount) as cost_amount,sum(t.cost_functional_amount) as cost_functional_amount,",
            "sum(t.cost_amount_payment) as cost_amount_payment,min(t.cost_exchange_rate) as cost_exchange_rate,",
            "sum(t.cost_amount_writeoff) as cost_amount_writeoff,min(t.order_id) as order_id,min(t.order_uuid) as order_uuid ",
            " from tc_cost t ",
            " left join  tc_order A ON A.order_id = t.order_id ",
            " left join  prm_coop C ON C.coop_id = t.customer_id ",

            " WHERE 1=1 and t.business_scope = #{bean.businessScope} and t.org_id = #{bean.orgId} ",
            "<when test='bean.RwbNumber!=null and bean.RwbNumber!=\"\"'>",
            " and A.rwb_number like  \"%\"#{bean.RwbNumber}\"%\" ",
            "</when>",
            "<when test='bean.orderCode!=null and bean.orderCode!=\"\"'>",
            " and (A.order_code  like  \"%\"#{bean.orderCode}\"%\" or  A.rwb_number like  \"%\"#{bean.orderCode}\"%\")",
            "</when>",
            "<when test='bean.customerNumber!=null and bean.customerNumber!=\"\"'>",
            " and (A.customer_number like  \"%\"#{bean.customerNumber}\"%\")",
            "</when>",
            "<when test='bean.flightDateStart!=null and bean.businessScope==\"TE\"'>",
            " and  A.expect_departure <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateStart!=null  and bean.businessScope==\"TI\"'>",
            " and  A.expect_arrival <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null  and bean.businessScope==\"TE\"'>",
            " and  A.expect_departure <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null and bean.businessScope==\"TI\"'>",
            " and  A.expect_arrival <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.customerName!=null and bean.customerName!=\"\"'>",
            " and t.customer_name like  \"%\"#{bean.customerName}\"%\"",
            "</when>",
            "<when test='bean.serviceId!=null'>",
            " and t.service_id = #{bean.serviceId}",
            "</when>",
            "<when test='bean.customerType!=null and bean.customerType!=\"\"'>",
            " and C.coop_type = #{bean.customerType}",
            "</when>",
            " group by t.order_id,t.customer_id,t.cost_currency",
            "</script>"})
    List<TcCost> queryTcCostPageTcExcel(@Param("bean") TcCost tcCost);

    @Select({"<script>",
            "select",
            " max(A.order_code) as order_code,max(A.customer_number) as awb_number,max(A.customer_number) as customerNumber,",
            "max(A.driving_time) as flight_date,",
            "max(C.coop_type) as customer_type,",
            "max(t.customer_name) as customer_name, max(t.service_name) as service_name, max(t.business_scope) as business_scope,",
            "t.cost_currency,sum(t.cost_amount) as cost_amount,sum(t.cost_functional_amount) as cost_functional_amount,",
            "sum(t.cost_amount_payment) as cost_amount_payment,min(t.cost_exchange_rate) as cost_exchange_rate,",
            "sum(t.cost_amount_writeoff) as cost_amount_writeoff,min(t.order_id) as order_id,min(t.order_uuid) as order_uuid ",
            " from lc_cost t ",
            " left join  lc_order A ON A.order_id = t.order_id ",
            " left join  prm_coop C ON C.coop_id = t.customer_id ",

            " WHERE 1=1 and t.business_scope = #{bean.businessScope} and t.org_id = #{bean.orgId} ",
            "<when test='bean.customerNumber!=null and bean.customerNumber!=\"\"'>",
            " and A.customer_number like  \"%\"#{bean.customerNumber}\"%\" ",
            "</when>",
            "<when test='bean.orderCode!=null and bean.orderCode!=\"\"'>",
            " and  A.order_code like  \"%\"#{bean.orderCode}\"%\"",
            "</when>",
            "<when test='bean.flightDateStart!=null'>",
            " and  A.driving_time <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null'>",
            " and  A.driving_time <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.customerName!=null and bean.customerName!=\"\"'>",
            " and t.customer_name like  \"%\"#{bean.customerName}\"%\"",
            "</when>",
            "<when test='bean.serviceId!=null'>",
            " and t.service_id = #{bean.serviceId}",
            "</when>",
            "<when test='bean.customerType!=null and bean.customerType!=\"\"'>",
            " and C.coop_type = #{bean.customerType}",
            "</when>",
            " group by t.order_id,t.customer_id,t.cost_currency",
            "</script>"})
    List<LcCost> queryLcCostPageLcExcel(@Param("bean") LcCost lcCost);

    @Select({"<script>",
            "select",
            " max(A.order_code) as order_code,max(A.customer_number) as awb_number,max(A.customer_number) as customerNumber,",
            "max(A.business_date) as flight_date,",
            "max(C.coop_type) as customer_type,",
            "max(t.customer_name) as customer_name, max(t.service_name) as service_name, max(t.business_scope) as business_scope,",
            "t.cost_currency,sum(t.cost_amount) as cost_amount,sum(t.cost_functional_amount) as cost_functional_amount,",
            "sum(t.cost_amount_payment) as cost_amount_payment,min(t.cost_exchange_rate) as cost_exchange_rate,",
            "sum(t.cost_amount_writeoff) as cost_amount_writeoff,min(t.order_id) as order_id,min(t.order_uuid) as order_uuid ",
            " from io_cost t ",
            " left join  io_order A ON A.order_id = t.order_id ",
            " left join  prm_coop C ON C.coop_id = t.customer_id ",

            " WHERE 1=1 and t.business_scope = #{bean.businessScope} and t.org_id = #{bean.orgId} ",
            "<when test='bean.customerNumber!=null and bean.customerNumber!=\"\"'>",
            " and A.customer_number like  \"%\"#{bean.customerNumber}\"%\" ",
            "</when>",
            "<when test='bean.orderCode!=null and bean.orderCode!=\"\"'>",
            " and  A.order_code like  \"%\"#{bean.orderCode}\"%\"",
            "</when>",
            "<when test='bean.flightDateStart!=null'>",
            " and  A.business_date <![CDATA[>=]]> #{bean.flightDateStart} ",
            "</when>",
            "<when test='bean.flightDateEnd!=null'>",
            " and  A.business_date <![CDATA[<=]]> #{bean.flightDateEnd} ",
            "</when>",
            "<when test='bean.customerName!=null and bean.customerName!=\"\"'>",
            " and t.customer_name like  \"%\"#{bean.customerName}\"%\"",
            "</when>",
            "<when test='bean.serviceId!=null'>",
            " and t.service_id = #{bean.serviceId}",
            "</when>",
            "<when test='bean.customerType!=null and bean.customerType!=\"\"'>",
            " and C.coop_type = #{bean.customerType}",
            "</when>",
            " group by t.order_id,t.customer_id,t.cost_currency",
            "</script>"})
    List<IoCost> queryLcCostPageIoExcel(@Param("bean") IoCost ioCost);

    @Select({"<script>",
            "SELECT",
            " A.cost_currency as costCurrency",
            " ,ROUND( sum( A.cost_amount_payment ), 2 ) AS cost_amount_payment",
            " ,ROUND(sum(A.cost_amount),2) as cost_amount",
            " ,ROUND(sum(A.cost_functional_amount),2) as cost_functional_amount",
            " ,ROUND(sum(IFNULL(A.cost_amount_writeoff,0)),2) AS cost_amount_writeoff",
            " ,ROUND(sum(IFNULL(A.cost_amount_payment,0)* A.cost_exchange_rate),2) AS amount_functional_payment",
            " ,ROUND(sum(A.cost_amount - IFNULL(A.cost_amount_writeoff,0)),2) AS costAmountNoWriteoff",
            " ,ROUND(sum((A.cost_amount - IFNULL(A.cost_amount_writeoff,0)) * A.cost_exchange_rate),2) AS costFunctionalAmountNoWriteoff",
            " FROM af_cost A",
            " INNER JOIN af_order B ON A.order_id = B.order_id",
            " INNER JOIN prm_coop C ON C.coop_id = A.customer_id",
            " WHERE A.org_id=#{orgId}",
/*            "<when test='awbNumber!=null and awbNumber!=\"\" and hawbNumber==null'>",
            " AND (B.awb_number like \"%\"#{awbNumber}\"%\" or B.hawb_number like \"%\"#{awbNumber}\"%\")",
            "</when>",
            "<when test='awbNumber!=null and awbNumber!=\"\" and hawbNumber!=null'>",
            " AND B.awb_number like \"%\"#{awbNumber}\"%\" and B.hawb_number like \"%\"#{hawbNumber}\"%\"",
            "</when>",*/
            "<when test='orderCode!=null and orderCode!=\"\"'>",
            " and (B.order_code  like  \"%\"#{orderCode}\"%\" or  B.awb_number like  \"%\"#{orderCode}\"%\" or B.hawb_number like \"%\"#{orderCode}\"%\")",
            "</when>",
            "<when test='customerNumber!=null and customerNumber!=\"\"'>",
            " and (B.customer_number like  \"%\"#{customerNumber}\"%\")",
            "</when>",
            "<when test='flightDateStart!=null and businessScope==\"AE\"'>",
            " AND B.expect_departure <![CDATA[ >= ]]> #{flightDateStart}",
            "</when>",
            "<when test='flightDateEnd!=null and businessScope==\"AE\"'>",
            " AND B.expect_departure <![CDATA[ <= ]]> #{flightDateEnd}",
            "</when>",
            "<when test='flightDateStart!=null and businessScope==\"AI\"'>",
            " AND B.expect_arrival <![CDATA[ >= ]]> #{flightDateStart}",
            "</when>",
            "<when test='flightDateEnd!=null and businessScope==\"AI\"'>",
            " AND B.expect_arrival <![CDATA[ <= ]]> #{flightDateEnd}",
            "</when>",
            "<when test='customerType!=null and customerType!=\"\"'>",
            " AND C.coop_type = #{customerType}",
            "</when>",
            "<when test='customerName!=null and customerName!=\"\"'>",
            " AND A.customer_name like  \"%\"#{customerName}\"%\"",
            "</when>",
            "<when test='businessScope!=null and businessScope!=\"\"'>",
            " AND A.business_scope =  #{businessScope}",
            "</when>",
            "<when test='serviceId!=null'>",
            " AND A.service_id =  #{serviceId}",
            "</when>",
            " group by A.cost_currency",
            "</script>"})
    List<AfCost> sumCostForAF(AfCost afCost);

    @Select({"<script>",
            "SELECT",
            " A.cost_currency as costCurrency",
            " ,ROUND( sum( A.cost_amount_payment ), 2 ) AS cost_amount_payment",
            " ,ROUND(sum(A.cost_amount),2) as cost_amount",
            " ,ROUND(sum(A.cost_functional_amount),2) as cost_functional_amount",
            " ,ROUND(sum(IFNULL(A.cost_amount_writeoff,0)),2) AS cost_amount_writeoff",
            " ,ROUND(sum(IFNULL(A.cost_amount_payment,0)* A.cost_exchange_rate),2) AS amount_functional_payment",
            " ,ROUND(sum(A.cost_amount - IFNULL(A.cost_amount_writeoff,0)),2) AS costAmountNoWriteoff",
            " ,ROUND(sum((A.cost_amount - IFNULL(A.cost_amount_writeoff,0)) * A.cost_exchange_rate),2) AS costFunctionalAmountNoWriteoff",
            " FROM sc_cost A",
            " INNER JOIN sc_order B ON A.order_id = B.order_id",
            " INNER JOIN prm_coop C ON C.coop_id = A.customer_id",
            " WHERE A.org_id=#{orgId}",
     /*       "<when test='awbNumber!=null and awbNumber!=\"\" and hawbNumber==null'>",
            " AND (B.mbl_number like \"%\"#{awbNumber}\"%\" or B.hbl_number like \"%\"#{awbNumber}\"%\")",
            "</when>",
            "<when test='awbNumber!=null and awbNumber!=\"\" and hawbNumber!=null'>",
            " AND B.mbl_number like \"%\"#{awbNumber}\"%\" and B.hbl_number like \"%\"#{hawbNumber}\"%\"",
            "</when>",*/
            "<when test='orderCode!=null and orderCode!=\"\"'>",
            " and (B.order_code  like  \"%\"#{orderCode}\"%\" or  B.mbl_number like  \"%\"#{orderCode}\"%\" or B.hbl_number like \"%\"#{orderCode}\"%\")",
            "</when>",
            "<when test='customerNumber!=null and customerNumber!=\"\"'>",
            " and (B.customer_number like  \"%\"#{customerNumber}\"%\")",
            "</when>",
            "<when test='flightDateStart!=null and businessScope==\"SE\"'>",
            " AND B.expect_departure <![CDATA[ >= ]]> #{flightDateStart}",
            "</when>",
            "<when test='flightDateEnd!=null and businessScope==\"SE\"'>",
            " AND B.expect_departure <![CDATA[ <= ]]> #{flightDateEnd}",
            "</when>",
            "<when test='flightDateStart!=null and businessScope==\"SI\"'>",
            " AND B.expect_arrival <![CDATA[ >= ]]> #{flightDateStart}",
            "</when>",
            "<when test='flightDateEnd!=null and businessScope==\"SI\"'>",
            " AND B.expect_arrival <![CDATA[ <= ]]> #{flightDateEnd}",
            "</when>",
            "<when test='customerType!=null and customerType!=\"\"'>",
            " AND C.coop_type = #{customerType}",
            "</when>",
            "<when test='customerName!=null and customerName!=\"\"'>",
            " AND A.customer_name like  \"%\"#{customerName}\"%\"",
            "</when>",
            "<when test='businessScope!=null and businessScope!=\"\"'>",
            " AND A.business_scope =  #{businessScope}",
            "</when>",
            "<when test='serviceId!=null'>",
            " AND A.service_id =  #{serviceId}",
            "</when>",
            " group by A.cost_currency",
            "</script>"})
    List<ScCost> sumCostForSC(ScCost scCost);

    @Select({"<script>",
            "SELECT",
            " A.cost_currency as costCurrency",
            " ,ROUND( sum( A.cost_amount_payment ), 2 ) AS cost_amount_payment",
            " ,ROUND(sum(A.cost_amount),2) as cost_amount",
            " ,ROUND(sum(A.cost_functional_amount),2) as cost_functional_amount",
            " ,ROUND(sum(IFNULL(A.cost_amount_writeoff,0)),2) AS cost_amount_writeoff",
            " ,ROUND(sum(IFNULL(A.cost_amount_payment,0)* A.cost_exchange_rate),2) AS amount_functional_payment",
            " ,ROUND(sum(A.cost_amount - IFNULL(A.cost_amount_writeoff,0)),2) AS costAmountNoWriteoff",
            " ,ROUND(sum((A.cost_amount - IFNULL(A.cost_amount_writeoff,0)) * A.cost_exchange_rate),2) AS costFunctionalAmountNoWriteoff",
            " FROM lc_cost A",
            " INNER JOIN lc_order B ON A.order_id = B.order_id",
            " INNER JOIN prm_coop C ON C.coop_id = A.customer_id",
            " WHERE A.org_id=#{orgId}",
            "<when test='customerNumber!=null and customerNumber!=\"\"'>",
            " AND B.customer_number like \"%\"#{customerNumber}\"%\" ",
            "</when>",
            "<when test='orderCode!=null and orderCode!=\"\"'>",
            " AND B.order_code like  \"%\"#{orderCode}\"%\"",
            "</when>",
            "<when test='flightDateStart!=null'>",
            " AND B.driving_time <![CDATA[ >= ]]> #{flightDateStart}",
            "</when>",
            "<when test='flightDateEnd!=null'>",
            " AND B.driving_time <![CDATA[ <= ]]> #{flightDateEnd}",
            "</when>",
            "<when test='customerType!=null and customerType!=\"\"'>",
            " AND C.coop_type = #{customerType}",
            "</when>",
            "<when test='customerName!=null and customerName!=\"\"'>",
            " AND A.customer_name like  \"%\"#{customerName}\"%\"",
            "</when>",
            "<when test='businessScope!=null and businessScope!=\"\"'>",
            " AND A.business_scope =  #{businessScope}",
            "</when>",
            "<when test='serviceId!=null'>",
            " AND A.service_id =  #{serviceId}",
            "</when>",
            " group by A.cost_currency",
            "</script>"})
    List<LcCost> sumCostForLC(LcCost lcCost);

    @Select({"<script>",
            "SELECT",
            " A.cost_currency as costCurrency",
            " ,ROUND( sum( A.cost_amount_payment ), 2 ) AS cost_amount_payment",
            " ,ROUND(sum(A.cost_amount),2) as cost_amount",
            " ,ROUND(sum(A.cost_functional_amount),2) as cost_functional_amount",
            " ,ROUND(sum(IFNULL(A.cost_amount_writeoff,0)),2) AS cost_amount_writeoff",
            " ,ROUND(sum(IFNULL(A.cost_amount_payment,0)* A.cost_exchange_rate),2) AS amount_functional_payment",
            " ,ROUND(sum(A.cost_amount - IFNULL(A.cost_amount_writeoff,0)),2) AS costAmountNoWriteoff",
            " ,ROUND(sum((A.cost_amount - IFNULL(A.cost_amount_writeoff,0)) * A.cost_exchange_rate),2) AS costFunctionalAmountNoWriteoff",
            " FROM io_cost A",
            " INNER JOIN io_order B ON A.order_id = B.order_id",
            " INNER JOIN prm_coop C ON C.coop_id = A.customer_id",
            " WHERE A.org_id=#{orgId}",
            "<when test='customerNumber!=null and customerNumber!=\"\"'>",
            " AND B.customer_number like \"%\"#{customerNumber}\"%\" ",
            "</when>",
            "<when test='orderCode!=null and orderCode!=\"\"'>",
            " AND B.order_code like  \"%\"#{orderCode}\"%\"",
            "</when>",
            "<when test='flightDateStart!=null'>",
            " AND B.business_date <![CDATA[ >= ]]> #{flightDateStart}",
            "</when>",
            "<when test='flightDateEnd!=null'>",
            " AND B.business_date <![CDATA[ <= ]]> #{flightDateEnd}",
            "</when>",
            "<when test='customerType!=null and customerType!=\"\"'>",
            " AND C.coop_type = #{customerType}",
            "</when>",
            "<when test='customerName!=null and customerName!=\"\"'>",
            " AND A.customer_name like  \"%\"#{customerName}\"%\"",
            "</when>",
            "<when test='businessScope!=null and businessScope!=\"\"'>",
            " AND A.business_scope =  #{businessScope}",
            "</when>",
            "<when test='serviceId!=null'>",
            " AND A.service_id =  #{serviceId}",
            "</when>",
            " group by A.cost_currency",
            "</script>"})
    List<IoCost> sumCostForIO(IoCost ioCost);


    @Select({"<script>",
            "SELECT",
            " A.cost_currency as costCurrency",
            " ,ROUND( sum( A.cost_amount_payment ), 2 ) AS cost_amount_payment",
            " ,ROUND(sum(A.cost_amount),2) as cost_amount",
            " ,ROUND(sum(A.cost_functional_amount),2) as cost_functional_amount",
            " ,ROUND(sum(IFNULL(A.cost_amount_writeoff,0)),2) AS cost_amount_writeoff",
            " ,ROUND(sum(IFNULL(A.cost_amount_payment,0)* A.cost_exchange_rate),2) AS amount_functional_payment",
            " ,ROUND(sum(A.cost_amount - IFNULL(A.cost_amount_writeoff,0)),2) AS costAmountNoWriteoff",
            " ,ROUND(sum((A.cost_amount - IFNULL(A.cost_amount_writeoff,0)) * A.cost_exchange_rate),2) AS costFunctionalAmountNoWriteoff",
            " FROM tc_cost A",
            " INNER JOIN tc_order B ON A.order_id = B.order_id",
            " INNER JOIN prm_coop C ON C.coop_id = A.customer_id",
            " WHERE A.org_id=#{orgId}",
            "<when test='rwbNumber!=null and rwbNumber!=\"\"'>",
            " AND B.rwb_number like \"%\"#{rwbNumber}\"%\" ",
            "</when>",
            "<when test='orderCode!=null and orderCode!=\"\"'>",
            " and (B.order_code  like  \"%\"#{orderCode}\"%\" or  B.rwb_number like  \"%\"#{orderCode}\"%\")",
            "</when>",
            "<when test='customerNumber!=null and customerNumber!=\"\"'>",
            " and (B.customer_number like  \"%\"#{customerNumber}\"%\")",
            "</when>",
            "<when test='flightDateStart!=null and businessScope==\"TE\"'>",
            " AND B.expect_departure <![CDATA[ >= ]]> #{flightDateStart}",
            "</when>",
            "<when test='flightDateEnd!=null and businessScope==\"TE\"'>",
            " AND B.expect_departure <![CDATA[ <= ]]> #{flightDateEnd}",
            "</when>",
            "<when test='flightDateStart!=null and businessScope==\"TI\"'>",
            " AND B.expect_arrival <![CDATA[ >= ]]> #{flightDateStart}",
            "</when>",
            "<when test='flightDateEnd!=null and businessScope==\"TI\"'>",
            " AND B.expect_arrival <![CDATA[ <= ]]> #{flightDateEnd}",
            "</when>",
            "<when test='customerType!=null and customerType!=\"\"'>",
            " AND C.coop_type = #{customerType}",
            "</when>",
            "<when test='customerName!=null and customerName!=\"\"'>",
            " AND A.customer_name like  \"%\"#{customerName}\"%\"",
            "</when>",
            "<when test='businessScope!=null and businessScope!=\"\"'>",
            " AND A.business_scope =  #{businessScope}",
            "</when>",
            "<when test='serviceId!=null'>",
            " AND A.service_id =  #{serviceId}",
            "</when>",
            " group by A.cost_currency",
            "</script>"})
    List<TcCost> sumCostForTC(TcCost tcCost);

    @Select("select IFNULL(D.amount_payment,0) AS amount_payment from (\n" +
            "SELECT A.org_id,B.order_id,B.cost_id \n" +
            ",SUM(B.amount_payment) AS amount_payment\n" +
            ",SUM(B.amount_payment_writeoff) AS amount_payment_writeoff\n" +
            "FROM css_payment A \r\n" +
            "INNER JOIN css_payment_detail B ON A.payment_id=B.payment_id\n" +
            "WHERE A.business_scope=#{businessScope}\n" +
            "GROUP BY A.org_id,B.order_id,B.cost_id\n" +
            ") AS D  where  D.org_id=#{org_id} AND D.order_id=#{order_id} AND D.cost_id=#{costId}")
    HashMap queryAmountPaymentForAF(@Param("org_id") Integer org_id, @Param("costId") Integer costId, @Param("order_id") Integer order_id, @Param("businessScope") String businessScope);

    @Select("select IFNULL(D.amount_payment,0) AS amount_payment from (\n" +
            "SELECT A.org_id,B.order_id,B.cost_id \n" +
            ",SUM(B.amount_payment) AS amount_payment\n" +
            ",SUM(B.amount_payment_writeoff) AS amount_payment_writeoff\n" +
            "FROM css_payment A \r\n" +
            "INNER JOIN css_payment_detail B ON A.payment_id=B.payment_id\n" +
            "WHERE A.business_scope =#{businessScope}\n" +
            "GROUP BY A.org_id,B.order_id,B.cost_id\n" +
            ") AS D  where  D.org_id=#{org_id} AND D.order_id=#{order_id} AND D.cost_id=#{costId}")
    HashMap queryAmountPaymentForSC(@Param("org_id") Integer org_id, @Param("costId") Integer costId, @Param("order_id") Integer order_id, @Param("businessScope") String businessScope);


}
